version: '3.1'

services:

  nginx-proxy:
    container_name: nginx-proxy
    image: jwilder/nginx-proxy:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/conf.d/my_proxy.conf:/etc/nginx/conf.d/my_proxy.conf:ro
      - /etc/nginx/certs
    environment:
      DEFAULT_EMAIL: ${WAGTAIL_LETSENCRYPT_EMAIL_1}
    restart: unless-stopped

  wagtail1:
    container_name: wagtail01
    image: wagtailproject/wagtail:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      VIRTUAL_HOST: ${WAGTAIL_VIRTUAL_HOST_1}
      LETSENCRYPT_HOST: ${WAGTAIL_LETSENCRYPT_HOST_1}
      LETSENCRYPT_EMAIL: ${WAGTAIL_LETSENCRYPT_EMAIL_1}
    volumes:
      - wagtail_media_1:${WAGTAIL_MEDIA_PATH_1}
      - wagtail_static_1:${WAGTAIL_STATIC_PATH_1}
    networks:
      - backend

  wagtail2:
    container_name: wagtail02
    image: wagtailproject/wagtail:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      VIRTUAL_HOST: ${WAGTAIL_VIRTUAL_HOST_2}
      LETSENCRYPT_HOST: ${WAGTAIL_LETSENCRYPT_HOST_2}
      LETSENCRYPT_EMAIL: ${WAGTAIL_LETSENCRYPT_EMAIL_2}
    volumes:
      - wagtail_media_2:${WAGTAIL_MEDIA_PATH_2}
      - wagtail_static_2:${WAGTAIL_STATIC_PATH_2}
    networks:
      - backend

  db:
    container_name: postgres
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - backend
    restart: unless-stopped

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  wagtail_media_1:
  wagtail_static_1:
  wagtail_media_2:
  wagtail_static_2:
